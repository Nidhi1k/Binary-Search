#include <iostream>
#include<algorithm>
using namespace std;/*n  size of array , key the number we are searching  */

int binarySearch(int arr[],int l,int r,int key)
{
     
    int mid;
    int pos=0;
    while(l<=r)
    {    //update mid
        mid=l+(r-l)/2; 
        
        if(arr[mid]==key)
        {
            return mid;
        }
        else if(key>arr[mid])
        {
            l=mid+1;
        }
        else if(key<arr[mid])
        {
            r=mid-1;
        }
        
        
    }
    
    return -1;
}



int main()
{   
    //     int n;
    //     int arr[n];
    //     cin>>n;
    //     for(int i=0;i<n;i++)
    //     {
    //         cin>>arr[i];
    //     }
     
    //     int key;
    //     cin>>key;
    //     int l=0;
    //     int r=n-1;
    //     int ans=binarySearch(arr,l,r,key);
    //     if(ans==-1)
    //     {
    //         cout<<"element is not present in our array" ;
    //     }
    //     else
    //     {
    //         cout<<"element is present at "<<ans;
    //     }
    
    // return 0;
     int arr[] = { 2, 3, 4, 10, 40 };
    int x = 10;
    int n = sizeof(arr) / sizeof(arr[0]);
    int result = binarySearch(arr, 0, n - 1, x);
    (result == -1) ? cout << "Element is not present in array"
                   : cout << "Element is present at index " << result;
    return 0;
    
    
}
